name: Validate install plans

on:
  workflow_run:
    workflows: ["Validation Gate"]
    types:
      - completed

jobs:
  validate-install-plan-schema:
    name: Validate install plan schema
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: validation_gate.yml
          run_id: ${{ github.event.workflow_run.id }}

      - name: Get PR number
        id: get_pr_number
        run: |
          export PR_NUMBER=$(cat artifact/pr_number.txt)
          echo "::set-output name=pr-number::$PR_NUMBER"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: "refs/pull/${{ steps.get_pr_number.outputs.pr-number }}/merge"

      - name: Setup workspace
        uses: './.github/actions/bootstrap'

      - name: Validate new files
        id: validation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NR_API_URL: ${{ secrets.NR_API_URL }}
          NR_API_TOKEN: ${{ secrets.NR_API_TOKEN }}
          NEW_RELIC_NO_CONFIG_FILE: true
          NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}
          NEW_RELIC_APP_NAME: ${{ secrets.NEW_RELIC_APP_NAME }}
          NEW_RELIC_HOST: staging-collector.newrelic.com
          NODE_ENV: production
          PR_NUMBER: ${{ steps.get_pr_number.outputs.pr-number }}
        run: |
          URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/$PR_NUMBER/files"
          DRY_RUN=true
          cd utils && yarn create-validate-install-plans $URL $DRY_RUN
      - name: Add commit status
        if: always()
        uses: './.github/actions/add-commit-status'
        with:
          context: "Validation / Install plan schema compliance"
          state: ${{ job.status }}